@namespace AntDesign.ProLayout
@using Microsoft.Extensions.Options
@inherits AntDomComponentBase
@inject IOptions<ProSettings> SettingState

<AntList
    Split="false"
    DataSource="Settings"
    ItemLayout="ListItemLayout.Horizontal">
    <ListItem>
        <span style="opacity: @(context.Disabled ? "0.5" : "1")">@context.Title</span>
        @context.Action
    </ListItem>
</AntList>

@code
{
    [Parameter]
    public bool isChinese { get; set; } = false;
    public SettingItem[] Settings { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Settings = new [] {
            new SettingItem
            {
                Title= isChinese?"内容宽度":"Content Width",
                Action = 
    @<Select
                              TItem="string"
                              TItemValue="string"
                              Size="small"
                              Style="width: 80px;"
                              DefaultValue="SettingState.Value.ContentWidth"
                              @bind-Value="SettingState.Value.ContentWidth">
                             <SelectOptions>
                                 <SelectOption TItem="string" TItemValue="string" Value="@("Fixed")" Label="@(isChinese?"Fixed(固定)":"Fixed")" />
                                 <SelectOption TItem="string" TItemValue="string" Value="@("Fluid")" Label="@(isChinese?"Fluid(流体)":"Fluid")" />
                             </SelectOptions>
                         </Select>
            },
            new SettingItem
            {
                Title=isChinese?"固定头部":"Fixed Header",
                Action = @<Switch Size="small" @bind-Value="SettingState.Value.FixedHeader" />
            },
            new SettingItem
            {
                Title=isChinese?"适用于侧边菜单布局":"Works on Side Menu Layout",
                Action = @<Switch Size="small" @bind-Value="SettingState.Value.FixSiderbar" />
            },
            new SettingItem
            {
                Title=isChinese?"拆分菜单":"Split Menus",
                Action = @<Switch Size="small" @bind-Value="SettingState.Value.SplitMenus" />
            },
        };
    }
}
